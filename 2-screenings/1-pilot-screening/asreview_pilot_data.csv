record_id,DOI,Author,Title,Publication Title,ISBN,ISSN,Url,Date,Series,Series Number,Series Text,Series Title,Publisher,Place,Abstract,ISBNs,Funding Information,PDF Link,Author Keywords,Mesh_Terms,Article Citation Count,Patent Citation Count,Reference Count,License,Issue Date,Meeting Date,Author full names,Author(s) ID,Year,Source title,Art. No.,Page start,Page end,Page count,Cited by,Link,Publication Stage,Open Access,Source,EID,Keywords,exported_notes_1,asreview_ranking,asreview_prior,exported_notes_2,included
95,10.1109/ICSCC62041.2024.10690844,G. H. Prathama; P. E. G. Gunawan; A. W. O. Gama,Green Computing Implementation for Indonesian Higher Education Adopting Serverless Microservices Architecture,2024 10th International Conference on Smart Computing and Communication (ICSCC),,,,01-Oct-24,,,,,IEEE,,"Sustainability poses a significant challenge within the realm of global information technology, especially within the resource-intensive settings of higher education. The present research delves into the application of serverless microservices architecture in universities in Indonesia as a prospective solution for eco-friendly computing. Through the utilization of cutting-edge serverless technologies, a prototype representing the IT framework of an Indonesian institution of higher education was formulated and assessed. The outcomes of this investigation reveal that the adoption of serverless microservices not only improves operational effectiveness but also brings about a notable reduction in energy consumption and carbon footprints. These findings offer valuable perspectives for academic leaders and IT experts who aspire to shift towards more sustainable IT infrastructures.",979-8-3503-6310-4,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10690844,Cost Efficiency;cloud computing;private universities;serverless computation;microservices architecture;green computing,,,,17.0,IEEE,,,,,,,,,,,,,,,,,Energy consumption;Scalability;Education;Microservice architectures;Prototypes;Computer architecture;Computational efficiency;Resource management;Sustainable development;Information technology,,1,1,,1
81,10.1109/IC2E61754.2024.00021,A. Mokhtari; B. Jonglez; T. Ledoux,Towards Digital Sustainability: Involving Cloud Users as Key Players,2024 IEEE International Conference on Cloud Engineering (IC2E),,2694-0825,,14-Nov-24,,,,,IEEE,,"Due to the rapid growth of Cloud services, data centers have become major energy consumers, resulting in significant CO2 emissions. Several infrastructure-focused strategies, such as resource consolidation, have been used to reduce the carbon footprint of Cloud infrastructure. However, end-users are often left out of the picture. Since they are the primary target of Cloud applications, it would be beneficial to actively involve them in reducing the carbon footprint of Cloud applications. In this paper, we offer end-users a way to influence the carbon footprint of Cloud applications they use. To this end, we ask end-users to select a high-level mode to control the carbon footprint of a Cloud application. We then design a dynamic adaptation algorithm that determines an appropriate configuration for the application for each request, based on the end-user mode and on the carbon intensity of the infrastructure energy sources. We implement and evaluate our system on a simple image-resizing application. We run experiments on SeDuCe, a Cloud infrastructure testbed partially powered by solar panels. Our results show that we save energy consumption by up to $84 \%$ when all end-users agree to degrade the quality of the application’s output, and we provide a good quality-energy trade-off when end-users make heterogeneous choices. In addition, we are able to improve quality by leveraging the available green energy budget.",979-8-3315-2869-0,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10749770,cloud computing;human-centered computing;digital sustainability;carbon footprint;green energy,,,,21.0,IEEE,,,,,,,,,,,,,,,,,Green energy;Energy consumption;Data centers;Protocols;Heuristic algorithms;Calibration;Solar panels;Proposals;Carbon;Carbon footprint,IC4,2,1,,1
80,10.1109/IC2E59103.2023.00015,R. Cordingly; J. Kaur; D. Dwivedi; W. Lloyd,"Towards Serverless Sky Computing: An Investigation on Global Workload Distribution to Mitigate Carbon Intensity, Network Latency, and Cost",2023 IEEE International Conference on Cloud Engineering (IC2E),,2694-0825,,06-Nov-23,,,,,IEEE,,"The high demand for energy consumption and the resulting carbon footprint of the cloud pose significant sustainability challenges, as cloud data centers consume vast amounts of energy. The emergence of serverless cloud computing platforms has opened up new avenues for more sustainable cloud computing. Serverless Function-as-a-Service (FaaS) cloud computing platforms facilitate deploying applications as decoupled microservices to leverage automatic rapid scaling, high availability, fault tolerance, and on-demand pricing. The absence of always-on hosting costs associated with virtual machines enables serverless functions to be deployed with many different function configurations and cloud regions to achieve high performance, low network latency, and reduced costs. In this paper, we investigate the utility of a global sky computing platform where serverless resources are aggregated between up to 19 distinct cloud regions. We prototype a serverless load distribution system to distribute client requests across serverless aggregations to minimize performance objectives, including network latency, runtime, hosting costs, and carbon footprint. To evaluate our serverless distribution system's ability to meet performance objectives, we continuously executed large experiments across 19 regions around the world from November 2022 through March 2023. Our serverless load distribution approach using aggregated resources reduced the carbon intensity of a globally distributed serverless application by up to 99.8%, network latency by 65%, or hosting costs by 58% by optimizing function routing to deployments with optimal hardware configurations.",979-8-3503-4394-6,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10305816,Sky Computing;Serverless Computing;Function-as-a-Service;Green Computing,,6.0,,26.0,IEEE,,,,,,,,,,,,,,,,,Cloud computing;Costs;Runtime;Prototypes;Pricing;Routing;Virtual machining,IC4,3,0,IC6,1
111,10.1109/ISCC61673.2024.10733735,C. Courageux-Sudan; A. -C. Orgerie; M. Quinson,"Studying the end-to-end performance, energy consumption and carbon footprint of fog applications",2024 IEEE Symposium on Computers and Communications (ISCC),,2642-7389,,31-Oct-24,,,,,IEEE,,"The deployment of applications closer to end-users through fog computing has shown promise in improving network communication times and reducing contention. However, the use of fog applications such as microservices necessitates intricate network interactions among heterogeneous devices. Consequently, understanding the impact of different application and infrastructure parameters on performance becomes crucial. Current literature either offers end-to-end models that lack granularity and validation or fine-grained models that only consider a portion of the infrastructure. Our research first compares experimentally the accuracy of the existing integrated frameworks. We then combine one of these tools with a collection of validated models to obtain comprehensive metrics regarding microservice applications operating in the fog. Through a use-case, we demonstrate the effectiveness of our approach in investigating fog environments, from examining application latencies to greenhouse gas emissions.",979-8-3503-5423-2,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10733735,Modeling and simulation;Fog-computing;Microservice;Performance evaluation;Energy consumption,,,,35.0,IEEE,,,,,,,,,,,,,,,,,Performance evaluation;Computers;Energy consumption;Accuracy;Computational modeling;Microservice architectures;Greenhouse gases;Carbon footprint;Edge computing,IC4,4,0,IC6,1
146,10.1109/TITS.2023.3274307,L. Wang; X. Deng; J. Gui; X. Chen; S. Wan,Microservice-Oriented Service Placement for Mobile Edge Computing in Sustainable Internet of Vehicles,IEEE Transactions on Intelligent Transportation Systems,,1558-0016,,17-May-23,,,,,IEEE,,"The integration of Mobile Edge Computing (MEC) and microservice architecture drives the implementation of the sustainable Internet of Vehicles (IoV). The microservice architecture enables the decomposition of a service into multiple independent, fine-grained microservices working independently. With MEC, microservices can be placed on Edge Service Providers (ESPs) dynamically, responding quickly and reducing service latency and resource consumption. However, the burgeoning of IoV leads to high computation and resource overheads, making service resource requirements an imminent issue. What’s more, due to the limited computation power of ESPs, they can only host a few services. Therefore, ESPs should judiciously decide which services to host. In this paper, we propose a Microservice-oriented Service Placement (MOSP) mechanism for MEC-enabled IoV to shorten service latency, reduce high resource consumption levels and guarantee long-term sustainability. Specifically, we formulate the service placement as an integer linear programming program, where service placement decisions are collaboratively optimized among ESPs, aiming to address spatial demand coupling, service heterogeneity, and decentralized coordination in MEC systems. MOSP comprises an upper layer to map the service requests to ESPs and a lower layer to adjust the service placement of ESPs. Evaluation results show that the microservice-oriented service deployment mechanism offers dramatic improvements in terms of resource savings, latency reduction, and service speed.",,"National Natural Science Foundation of China Projects(grant numbers:62172441,62172449,61772553); Local Science and Technology Developing Foundation Guided by the Central Government through the Free Exploration Project 2021Szvup166;; Postgraduate Research and Innovation Project of Hunan Province(grant numbers:CX20200211); Fundamental Research Funds for the Central Universities of Central South University(grant numbers:2020zzts138); Opening Project of State Key Laboratory of Nickel and Cobalt Resources Comprehensive Utilization(grant numbers:GZSYS-KY-2022-018,GZSYS-KY-2022-024); Key Project of Shenzhen City Special Fund for Fundamental Research(grant numbers:202208183000751); Hunan Provincial Department of Transportation Foundation(grant numbers:201929); ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10128791,Mobile edge computing;microservice;Internet of Vehicles;service placement,,35.0,,25.0,IEEE,,,,,,,,,,,,,,,,,Microservice architectures;Servers;Cloud computing;Quality of service;Costs;Multi-access edge computing;Memory management,IC4,5,0,IC6,1
156,10.1109/WETICE64632.2024.00024,J. A. Larracoechea; S. Ilarri; P. Roose,RADIANCE: A CASE Tool For Green Software Design,2024 32nd International Conference on Enabling Technologies: Infrastructure for Collaborative Enterprises (WETICE),,,,14-Feb-25,,,,,IEEE,,"Regardless of the improvements in the efficiency of energy consumption of information and communication technology, energy consumption will forever be a requisite for software execution. Consequently, researchers have promoted the development of green and sustainable software with new development methods and tools. These, however, have been adopted with limited success due to technicalities and specific language/platform requirements. In this paper, we present RADIANCE: a web app for designing greener software with a model-driven approach based on the Behavior-Based Consumption Profiles (BBCP) external Domain-Specific Language (DSL). RADIANCE, in contrast to other tools, embraces users with different levels of knowledge about green software and software architecture. Moreover, RADIANCE assesses and rates, reports, and provides advice on the energy-consuming patterns of the software models created by the user, assisting them in identifying possible design changes that result in greener software designs from the initial stages of software development.",979-8-3315-0587-5,Gobierno de Aragón;,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10880285,Software design;Green software;Sustainable software;Energy consumption;Software development;Model Driven Software Development,,,,32.0,IEEE,,,,,,,,,,,,,,,,,Energy consumption;Software design;Computer aided software engineering;Software architecture;Green products;Software;Information and communication technology;DSL;Software development management;Domain specific languages,EC3 buyt maybe useful,6,0,IC5,1
200,10.3390/app14177456,Larracoechea J.A.; Ilarri S.; Roose P.,A Proposal of Behavior-Based Consumption Profiles for Green Software Design,,,,,,,,,,,,"Despite the increase in the efficiency of energy consumption in information and communication technology, software execution and its constraints are responsible for how energy is consumed in hardware hosts. Consequently, researchers have promoted the development of sustainable software with new development methods and tools to lessen its hardware demands. However, the approaches developed so far lack cohesiveness along the stages of the software development life cycle (SDLC) and exist outside of a holistic method for green software development (GSD). In addition, there is a severe lack of approaches that target the analysis and design stages of the SDLC, leaving software architects and designers unsupported. In this article, we introduce our behavior-based consumption profile (BBCP) external Domain-Specific Language (DSL), aimed at assisting software architects and designers in modeling the behavior of software. The models generated with our external DSL contain multiple sets of properties that characterize features of the software’s behavior. In contrast to other modeling languages, our BBCP emphasizes how time and probability are involved in software execution and its evolution over time, helping its users to gather an expectation of software usage and hardware consumption from the initial stages of software development. To illustrate the feasibility and benefits of our proposal, we conclude with an analysis of the model of a software service created using the BBCP, which is simulated using Insight Maker to obtain an estimation of hardware consumption and later translated to energy consumption. © 2024 by the authors.",,,,behavior with software; green software; SOA; software behavior; software engineering; software profiling,,,,,,,,"Larracoechea, Jorge Andrés (57221960959); Ilarri, Sergio (7801631434); Roose, Philippe (55843683500)",57221960959; 7801631434; 55843683500,2024.0,Applied Sciences (Switzerland),7456,,,,1.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85203852902&doi=10.3390%2fapp14177456&partnerID=40&md5=764572cb721393b46c5d6d5cbbf1be5c,Final,All Open Access; Gold Open Access,Scopus,2-s2.0-85203852902,Program translators; Software design; Behavior with software; Behavior-based; Energy-consumption; Green software; SOA; Software architects; Software behavior; Software development life-cycle; Software execution; Software profiling; Green development,EC3 but may be useful,7,0,IC5,1
107,10.1109/ISCA59077.2024.00041,Wang J.; Berger D.S.; Kazhamiaka F.; Irvene C.; Zhang C.; Choukse E.; Frost K.; Fonseca R.; Warrier B.; Bansal C.; Stern J.; Bianchini R.; Sriraman A.,Designing Cloud Servers for Lower Carbon,,,,,,,,,,,,"To mitigate climate change, we must reduce carbon emissions from hyperscale cloud computing. We find that cloud compute servers cause the majority of emissions in a general-purpose cloud. Thus, we motivate designing carbon-efficient compute server SKUs, or GreenSKUs, using recently-available low-carbon server components. To this end, we design and build three GreenSKUs using low-carbon components, such as energy-efficient CPUs, reused old DRAM via CXL, and reused old SSDs.We detail several challenges that limit GreenSKUs, carbon savings at scale and may prevent their adoption by cloud providers. To address these challenges, we develop a novel methodology and associated framework, GSF (GreenSKU Framework), that enables a cloud provider to systematically evaluate a GreenSKU's carbon savings at scale. We implement GSF within Microsoft Azure's production constraints to evaluate our three GreenSKUs' carbon savings. Using GSF, we show that our most carbon-efficient GreenSKU reduces emissions per core by 28 % compared to currently-deployed cloud servers. When designing GreenSKUs to meet applications' performance requirements, we reduce emissions by 15 %. When incorporating overall data center overheads, our GreenSKU reduces Azure's net cloud emissions by 8 %. © 2024 IEEE.",,,,Carbon; Cloud Computing; Data Center; Server Design; Sustainability,,,,,,,,"Wang, Jaylen (58566181500); Berger, Daniel S. (56270528200); Kazhamiaka, Fiodar (56790102800); Irvene, Celine (57195997387); Zhang, Chaojie (57207250303); Choukse, Esha (57191255557); Frost, Kali (57203118485); Fonseca, Rodrigo (8872461200); Warrier, Brijesh (57228220000); Bansal, Chetan (55370264500); Stern, Jonathan (59258597400); Bianchini, Ricardo (7006939544); Sriraman, Akshitha (57189065986)",58566181500; 56270528200; 56790102800; 57195997387; 57207250303; 57191255557; 57203118485; 8872461200; 57228220000; 55370264500; 59258597400; 7006939544; 57189065986,2024.0,Proceedings - International Symposium on Computer Architecture,,452.0,470.0,18.0,9.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85200553624&doi=10.1109%2fISCA59077.2024.00041&partnerID=40&md5=04e02bd90867d84af9b5000b6a4fc8ec,Final,,Scopus,2-s2.0-85200553624,Carbon; Climate change; Energy efficiency; Green computing; Program processors; Windows operating system; Carbon emissions; Carbon saving; Cloud providers; Cloud servers; Cloud-computing; Datacenter; Design and build; Low carbon; Server components; Server design; Cloud computing,EC3,8,0,IC5,1
40,10.1109/ACCESS.2021.3075973,E. Ahvar; S. Ahvar; Z. Á. Mann; N. Crespi; R. Glitho; J. Garcia-Alfaro,DECA: A Dynamic Energy Cost and Carbon Emission-Efficient Application Placement Method for Edge Clouds,IEEE Access,,2169-3536,,27-Apr-21,,,,,IEEE,,"As an increasing amount of data processing is done at the network edge, high energy costs and carbon emission of Edge Clouds (ECs) are becoming significant challenges. The placement of application components (e.g., in the form of containerized microservices) on ECs has an important effect on the energy consumption of ECs, impacting both energy costs and carbon emissions. Due to the geographic distribution of ECs, there is a variety of resources, energy prices and carbon emission rates to consider, which makes optimizing the placement of applications for cost and carbon efficiency even more challenging than in centralized clouds. This paper presents a Dynamic Energy cost and Carbon emission-efficient Application placement method (DECA) for ECs. DECA addresses both the initial placement of applications on ECs and the re-optimization of the placement using migrations. DECA considers geographically varying energy prices and carbon emission rates as well as optimizing the usage of both network and computing resources at the same time. By combining a prediction-based A* algorithm with a Fuzzy Sets technique, DECA makes intelligent decisions to optimize energy cost and carbon emissions. Simulation results show the ability of DECA in providing a tradeoff and optimizing energy cost and carbon emission at the same time.",,European Union’s Horizon 2020 Research and Innovation Programme (FogProtect)(grant numbers:871525);,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=9416667,Edge cloud;energy consumption;energy costs;green computing;carbon emission;application placement,,22.0,,54.0,CCBY,,,,,,,,,,,,,,,,,Carbon dioxide;Energy consumption;Internet of Things;Cloud computing;Optimization;Resource management;Time factors,IC4,9,0,IC6,1
213,10.3390/su16135738,Soongpol B.; Netinant P.; Rukhiran M.,Practical Sustainable Software Development in Architectural Flexibility for Energy Efficiency Using the Extended Agile Framework,,,,,,,,,,,,"Many regular business operations are transforming into digital services, increasing advanced multi-platforms, rapid operational alignment, flexibility, and environmental impact through energy consumption, hardware waste, and technology investments. Flexible and sustainable system development models emphasizing energy efficiency can help innovate software development as digital servicing applications shift. This research is motivated by the need to improve energy consumption in early software design and development due to rising technological efficiency and sustainability demands. Although effective in iterative development and stakeholder engagement, traditional Agile methodologies often struggle with long-term sustainability and energy efficiency. Extended Agile, combining Agile, layered architecture, and aspect-oriented frameworks (ALAI), promises to improve system modularity, flexibility, maintainability, and sustainability. This study’s findings are not just theoretical, but also practically relevant, as they explore the energy efficiency of ALAI software development methodologies, using graduate admission information system services (GAISS) as an example. GAISS is a complex system that handles the entire process of graduate admissions, from application submission to final decision. The study quantifies the energy usage of a student-list webpage by analyzing Microsoft IIS server logs from February 2022 to May 2024. Directly applicable findings show that the GAISS based on the ALAI framework reduces energy consumption by 10.7914% compared to traditional Agile software developments. ALAI used 892.80 kWh versus Agile’s 1000.80 kWh during operations, saving energy. These findings demonstrate the benefits of integrating aspect-oriented frameworks and layering approaches into Agile methodologies, contributing to sustainable software development discourse. The study emphasizes the importance of energy-efficient frameworks such as ALAI to reduce software systems’ environmental impact and promote software development sustainability. The findings of this study, with their practical relevance, assist software developers and organizations in choosing software design and development methods that maximize operational efficiency and environmental sustainability. © 2024 by the authors.",,,,agile; aspect-oriented; energy efficiency; flexibility; framework; layering; software development; sustainability,,,,,,,,"Soongpol, Buerian (58766517600); Netinant, Paniti (6507249299); Rukhiran, Meennapa (57201645315)",58766517600; 6507249299; 57201645315,2024.0,Sustainability (Switzerland),5738,,,,0.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85198449600&doi=10.3390%2fsu16135738&partnerID=40&md5=1ad850b0d978a007606fa8eb5da24200,Final,All Open Access; Gold Open Access,Scopus,2-s2.0-85198449600,business development; energy efficiency; environmental impact; information system; software; stakeholder; sustainability; sustainable development,EC3,10,0,IC5,1
90,10.1109/ICPADS56603.2022.00082,C. Song; F. Jiang; X. Liang; N. Ahuja; M. J. Kumar,Service Level Objective Adaptive Energy Efficiency Management,2022 IEEE 28th International Conference on Parallel and Distributed Systems (ICPADS),,2690-5965,,27-Mar-23,,,,,IEEE,,"Cloud applications are transforming to microservice based deployment. Microservice comes with many advantages-scalability, agility, availability – and it suits the complicated cloud applications. For microservice deployment, service quality metrics play important role to ensure reliable user experiences for those applications built upon many small services, and the service level objective (SLO) is adopted to govern resource provision for optimal operation cost. Amid growing awareness on data center carbon emission, more organizations are paying attention to energy-efficient practices in cloud deployment to reduce energy consumption and operational carbon footprint. Modern processors provide fine-grained power scaling capabilities, e.g., Intel Xeon PCPS (PerCore P-States), this paper presented a dynamic energy efficiency management framework to adaptively scale processor core frequency as well as implicated energy consumption in accordance with service quality requirements. In this paper, we discussed hurdles and solutions for applying platform energy intelligence to microservices that are often with intrinsic platform-agnostic. The experiments proved the proposed method can effectively reduce energy consumption with competitive cost benefits without compromising service quality goals.",978-1-6654-7315-6,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10077892,Microservices;Service Mesh;Per-Core P-States;Service Level Objective (SLO);Service Level Indicator (SLI);Energy Efficiency;Carbon Reduction;Sustainability;Adaptive Control;Core Frequency Scaling,,,,12.0,IEEE,,,,,,,,,,,,,,,,,Energy consumption;Program processors;Costs;Power system management;Memory management;Microservice architectures;Tail,IC4,11,0,Potentially EC4 but could be worth investigating ,1
198,10.3390/app12125793,Saboor A.; Hassan M.F.; Akbar R.; Shah S.N.M.; Hassan F.; Magsi S.A.; Siddiqui M.A.,Article Containerized Microservices Orchestration and Provisioning in Cloud Computing: A Conceptual Framework and Future Perspectives,,,,,,,,,,,,"Cloud computing is a rapidly growing paradigm which has evolved from having a mono-lithic to microservices architecture. The importance of cloud data centers has expanded dramatically in the previous decade, and they are now regarded as the backbone of the modern economy. Cloud-based microservices architecture is incorporated by firms such as Netflix, Twitter, eBay, Amazon, Hailo, Groupon, and Zalando. Such cloud computing arrangements deal with the parallel deployment of data-intensive workloads in real time. Moreover, commonly utilized cloud services such as the web and email require continuous operation without interruption. For that purpose, cloud service providers must optimize resource management, efficient energy usage, and carbon footprint reduction. This study presents a conceptual framework to manage the high amount of microservice execution while reducing response time, energy consumption, and execution costs. The proposed framework suggests four key agent services: (1) intelligent partitioning: responsible for microservice classification; (2) dynamic allocation: used for pre-execution distribution of microservices among containers and then makes decisions for dynamic allocation of microservices at runtime; (3) resource optimization: in charge of shifting workloads and ensuring optimal resource use; (4) mutation ac-tions: these are based on procedures that will mutate the microservices based on cloud data center workloads. The suggested framework was partially evaluated using a custom-built simulation envi-ronment, which demonstrated its efficiency and potential for implementation in a cloud computing context. The findings show that the engrossment of suggested services can lead to a reduced number of network calls, lower energy consumption, and relatively reduced carbon dioxide emissions. © 2022 by the authors. Licensee MDPI, Basel, Switzerland.",,,,cloud computing; containers; microservices; multicloud; virtual machine,,,,,,,,"Saboor, Abdul (23986039400); Hassan, Mohd Fadzil (55372860500); Akbar, Rehan (36052560100); Shah, Syed Nasir Mehmood (57213233304); Hassan, Farrukh (57226179576); Magsi, Saeed Ahmed (57217071359); Siddiqui, Muhammad Aadil (57214072105)",23986039400; 55372860500; 36052560100; 57213233304; 57226179576; 57217071359; 57214072105,2022.0,Applied Sciences (Switzerland),5793,,,,20.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85132273566&doi=10.3390%2fapp12125793&partnerID=40&md5=08948392df2786e48a4037d6d7f98361,Final,All Open Access; Gold Open Access,Scopus,2-s2.0-85132273566,,IC4,12,0,IC6,1
29,10.1016/j.jnca.2019.102441,Yu Y.; Yang J.; Guo C.; Zheng H.; He J.,Joint optimization of service request routing and instance placement in the microservice system,,,,,,,,,,,,"Microservice architecture is a promising architectural style. It decomposes monolithic software into a set of loosely coupled containerized microservices and associates them into multiple microservice chains to serve service requests. The new architecture creates flexibility for service provisioning but also introduces increased energy consumption and low service performance. Efficient resource allocation is critical. Unfortunately, existing solutions are designed at a coarse level for virtual machine (VM)-based clouds and not optimized for such chain-oriented service provisioning. In this paper, we study the resource allocation optimization problem for service request routing and microservice instance placement, so as to jointly reduce both resource usage and chains’ end-to-end response time for saving energy and guaranteeing Quality of Service (QoS). We design detailed workload models for microservices and chains and formulate the optimization problem as a bi-criteria optimization problem. To address it, a three-stage scheme is proposed to search and optimize the trade-off decisions, route service requests into instances and deploy instances to servers in a balanced manner. Through numerical evaluations, we show that while assuring the same QoS, our scheme performs significantly better than and faster than benchmarking algorithms on reducing energy consumption and balancing load. © 2019",,,,Bi-criteria optimization; Energy consumption; Load balance; Microservice; Microservice chain; QoS,,,,,,,,"Yu, Yinbo (57197519687); Yang, Jianfeng (57190583661); Guo, Chengcheng (7402497011); Zheng, Hong (55286539700); He, Jiancheng (57211061228)",57197519687; 57190583661; 7402497011; 55286539700; 57211061228,2019.0,Journal of Network and Computer Applications,102441,,,,37.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85072519087&doi=10.1016%2fj.jnca.2019.102441&partnerID=40&md5=12d28f55304bc761583ba7edea990eb5,Final,,Scopus,2-s2.0-85072519087,Balancing; Economic and social effects; Energy utilization; Optimization; Resource allocation; Benchmarking algorithm; Bicriteria optimization; Efficient resource allocation; End-to-end response time; Load balance; Microservice; Reducing energy consumption; Resource allocation optimization; Quality of service,IC4,13,0,IC6,1
50,10.1109/ACCESS.2024.3461149,K. Afachao; A. M. Abu-Mahfouz; G. P. Hanke,Efficient Microservice Deployment in the Edge-Cloud Networks With Policy-Gradient Reinforcement Learning,IEEE Access,,2169-3536,,16-Sep-24,,,,,IEEE,,"The rise of user-centric design demands ubiquitous access to infrastructure and applications, facilitated by the Edge-Cloud network and microservices. However, efficiently managing resource allocation while orchestrating microservice placement in such dynamic environments presents a significant challenge. These challenges stem from the limited resources of edge devices, the need for low latency responses, and the potential for performance degradation due to service failures or inefficient deployments. This paper addresses the challenge of microservice placement in Edge-Cloud environments by proposing a novel Reinforcement Learning algorithm called Bi-Generic Advantage Actor-Critic for Microservice Placement Policy. This algorithm’s ability to learn and adapt to the dynamic environment makes it well-suited for optimizing resource allocation and service placement decisions within the Edge-Cloud. We compare this algorithm against three baseline algorithms through simulations on a real-world dataset, evaluating performance metrics such as execution time, network usage, average migration delay, and energy consumption. The results demonstrate the superiority of the proposed method, with an 8% reduction in execution time, translating to faster response times for users. Additionally, it achieves a 4% decrease in network usage and a 2% decrease in energy consumption compared to the best-performing baseline. This research contributes by reproducing the Edge-Cloud environment, applying the novel Bi-Generic Advantage Actor-Critic technique, and demonstrating significant improvements over the state-of-the-art baseline algorithms in microservice placement and resource management within Edge-Cloud environments.",,"Telkom, South Africa; ",https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=10680533,Edge computing;microservices;network optimization;online placement;scheduling algorithms;reinforcement learning,,1.0,,32.0,CCBYNCND,,,,,,,,,,,,,,,,,Microservice architectures;Heuristic algorithms;Reliability;Optimization methods;Resource management;Containers;Edge computing;Scheduling;User centered design;Reinforcement learning,IC4,14,0,IC6 but borderline,1
140,10.1109/TC.2025.3535826,Wang L.; Liu X.; Ding H.; Hu Y.; Peng K.; Hu M.,Energy-Delay-Aware Joint Microservice Deployment and Request Routing with DVFS in Edge: A Reinforcement Learning Approach,,,,,,,,,,,,"The emerging microservice architecture offers opportunities for accommodating delay-sensitive applications in edge. However, such applications are computation-intensive and energy-consuming, imposing great difficulties to edge servers with limited computing resources, energy supply, and cooling capabilities. To reduce delay and energy consumption in edge, efficient microservice orchestration is necessary, but significantly challenging. Due to frequent communications among multiple microservices, service deployment and request routing are tightly-coupled, which motivates a complex joint optimization problem. When considering multi-instance modeling and fine-grained orchestration for massive microservices, the difficulty is extremely enlarged. Nevertheless, previous work failed to address the above difficulties. Also, they neglected to balance delay and energy, especially lacking dynamic energy-saving abilities. Therefore, this paper minimizes energy and delay by jointly optimizing microservice deployment and request routing via multi-instance modeling, fine-grained orchestration, and dynamic adaptation. Our queuing network model enables accurate end-to-end time analysis covering queuing, computing, and communicating delays. We then propose a delay-aware reinforcement learning algorithm, which derives the static service deployment and routing decisions. Moreover, we design an energy-aware dynamic frequency scaling algorithm, which saves energy with fluctuating request patterns. Experiment results demonstrate that our approaches significantly outperform baseline algorithms in both delay and energy consumption.  © 1968-2012 IEEE.",,,,dynamic voltage frequency scaling; Edge computing; queuing theory; reinforcement learning; service orchestration,,,,,,,,"Wang, Liangyuan (58602828200); Liu, Xudong (59537805100); Ding, Haonan (59529547400); Hu, Yi (57669983700); Peng, Kai (49962095200); Hu, Menglan (55458917900)",58602828200; 59537805100; 59529547400; 57669983700; 49962095200; 55458917900,2025.0,IEEE Transactions on Computers,,,,,0.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85216638444&doi=10.1109%2fTC.2025.3535826&partnerID=40&md5=71265858f6c91f3c7d494e9fcbcbb025,Article in press,,Scopus,2-s2.0-85216638444,Delay tolerant networks; Delay-sensitive applications; Dynamic frequency scaling; Edge computing; Energy efficiency; Energy utilization; Finite automata; Learning algorithms; Queueing networks; Reinforcement learning; Voltage scaling; Delay aware; Dynamic voltage; Dynamic voltage frequency scaling; Edge computing; Frequency-scaling; Queuing theory; Reinforcement learnings; Routings; Service orchestration; Voltage frequency; Queueing theory,IC4,15,0,IC6,1
13,10.1007/978-3-319-69035-3_14,Xu M.; Buyya R.,Energy efficient scheduling of application components via brownout and approximate markov decision process,,,,,,,,,,,,"Unexpected loads in Cloud data centers may trigger overloaded situation and performance degradation. To guarantee system performance, cloud computing environment is required to have the ability to handle overloads. The existing approaches, like Dynamic Voltage Frequency Scaling and VM consolidation, are effective in handling partial overloads, however, they cannot function when the whole data center is overloaded. Brownout has been proved to be a promising approach to relieve the overloads through deactivating application non-mandatory components or microservices temporarily. Moreover, brownout has been applied to reduce data center energy consumption. It shows that there are trade-offs between energy saving and discount offered to users (revenue loss) when one or more services are not provided temporarily. In this paper, we propose a brownout-based approximate Markov Decision Process approach to improve the aforementioned trade-offs. The results based on real trace demonstrate that our approach saves 20% energy consumption than VM consolidation approach. Compared with existing energy-efficient brownout approach, our approach reduces the discount amount given to users while saving similar energy consumption. © Springer International Publishing AG 2017.",,,,Application component; Brownout; Cloud energy efficiency; Markov decision process; Microservices,,,,,,,,"Xu, Minxian (54394627800); Buyya, Rajkumar (57194845546)",54394627800; 57194845546,2017.0,Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics),,206.0,220.0,14.0,18.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034095398&doi=10.1007%2f978-3-319-69035-3_14&partnerID=40&md5=9bb690276a53bfcfee72db0e06c927ac,Final,,Scopus,2-s2.0-85034095398,Commerce; Decision making; Distributed computer systems; Dynamic frequency scaling; Economic and social effects; Energy conservation; Energy utilization; Green computing; Markov processes; Voltage scaling; Application components; Brownout; Cloud computing environments; Dynamic voltage frequency scaling; Energy-Efficient Scheduling; Markov Decision Processes; Microservices; Performance degradation; Energy efficiency,IC3,16,0,potentially EC4 - looks like infrastructure level but would be good to double check,1
151,10.1109/TSUSC.2017.2661339,Xu M.; Dastjerdi A.V.; Buyya R.,Energy Efficient Scheduling of Cloud Application Components with Brownout,,,,,,,,,,,,"It is common for cloud data centers meeting unexpected loads like request bursts, which may lead to overloaded situation and performance degradation. Dynamic Voltage Frequency Scaling and VM consolidation have been proved effective to manage overloads. However, they cannot function when the whole data center is overloaded. Brownout provides a promising direction to avoid overloads through configuring applications to temporarily degrade user experience. Additionally, brownout can also be applied to reduce data center energy consumption. As a complementary option for Dynamic Voltage Frequency Scaling and VM consolidation, our combined brownout approach reduces energy consumption through selectively and dynamically deactivating application optional components, which can also be applied to self-contained microservices. The results show that our approach can save more than 20 percent energy consumption and there are trade-offs between energy saving and discount offered to users. © 2016 IEEE.",,,,application component; brownout; Cloud data centers; energy efficient; microservices,,,,,,,,"Xu, Minxian (54394627800); Dastjerdi, Amir Vahid (35753172200); Buyya, Rajkumar (57194845546)",54394627800; 35753172200; 57194845546,2016.0,IEEE Transactions on Sustainable Computing,7836325,40.0,43.0,3.0,30.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85081713746&doi=10.1109%2fTSUSC.2017.2661339&partnerID=40&md5=e00446747da4f43b0f291cc8f5ee0154,Final,All Open Access; Green Open Access,Scopus,2-s2.0-85081713746,Dynamic frequency scaling; Economic and social effects; Energy efficiency; Energy utilization; Voltage scaling; Application components; brownout; Cloud data centers; Energy efficient; microservices; Green computing,IC3,17,0,Potential duplicate? Also potentially EC4 but good to double check,1
152,10.1109/TSUSC.2018.2808493,M. Xu; A. N. Toosi; R. Buyya,iBrownout: An Integrated Approach for Managing Energy and Brownout in Container-Based Clouds,IEEE Transactions on Sustainable Computing,,2377-3782,,26-Feb-18,,,,,IEEE,,"Energy consumption of Cloud data centers has been a major concern of many researchers, and one of the reasons for huge energy consumption of Clouds lies in the inefficient utilization of computing resources. Besides energy consumption, another challenge of data centers is the unexpected loads, which leads to the overloads and performance degradation. Compared with VM consolidation and Dynamic Voltage Frequency Scaling that cannot function well when the whole data center is overloaded, brownout has shown to be a promising technique to handle both overloads and energy consumption through dynamically deactivating application optional components, which are also identified as containers/microservices. In this work, we propose an integrated approach to manage energy consumption and brownout in container-based cloud data centers. We also evaluate our proposed scheduling policies with real traces in a prototype system. The results show that our approach reduces about 40, 20, and 10 percent energy than the approach without power-saving techniques, brownout-overbooking approach and auto-scaling approach, respectively, while ensuring Quality of Service.",,China Scholarship Council; Australia Research Council Future Fellowship;,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8302602,Cloud data centers;energy efficiency;QoS;containers;microservices;brownout,,29.0,,36.0,IEEE,,,,,,,,,,,,,,,,,Data centers;Energy consumption;Cloud computing;Quality of service;Servers;Containers;Prototypes,EC3,18,0,IC6,1
120,10.1109/JIOT.2022.3155598,Yu Y.; Liu J.; Fang J.,Online Microservice Orchestration for IoT via Multiobjective Deep Reinforcement Learning,,,,,,,,,,,,"By providing loosely coupled, lightweight, and independent services, the microservice architecture is promising for large-scale and complex service provision requirements in the Internet of Things (IoT). However, it requires more fine-grained resource management and orchestration for service provision. Most of the existing microservice orchestration solutions are based on those designed for the traditional cloud. They can only provide coarse-grained resource allocation using possibly conflicting weighted objectives. In this article, we present a fine-grained microservice orchestration approach to provide services online for dynamic requests of IoT applications. By using a fine-grained resource model of energy cost and service end-to-end response time of orchestrated microservices, we formulate the microservice orchestration problem as a multiobjective Markov decision process. We then propose a multiobjective optimization solution based on deep reinforcement learning (DRL) to simultaneously reduce energy consumption and response time. Through extensive experiments, our proposed algorithm presents significant performance results than the state of the art. To the best of our knowledge, this is the first work that addresses microservice orchestration using DRL for multiple conflicting objectives.  © 2014 IEEE.",,,,"Deep reinforcement learning (DRL); energy consumption, Internet of Things (IoT); online microservice orchestration; Quality-of-Service (QoS) assurance",,,,,,,,"Yu, Yinbo (57197519687); Liu, Jiajia (40461843700); Fang, Jing (57477048200)",57197519687; 40461843700; 57477048200,2022.0,IEEE Internet of Things Journal,,17513.0,17525.0,12.0,11.0,https://www.scopus.com/inward/record.uri?eid=2-s2.0-85125708766&doi=10.1109%2fJIOT.2022.3155598&partnerID=40&md5=519bcf5c5902a8cf7f53e8c2385fa6f2,Final,,Scopus,2-s2.0-85125708766,Deep learning; Internet of things; Markov processes; Multiobjective optimization; Natural resources management; Quality of service; Reinforcement learning; Resource allocation; Deep reinforcement learning; Energy-consumption; Fine grained; Microservice architecture; Multi objective; Online microservice orchestration; QoS assurance.; Quality-of-service; Reinforcement learnings; Resource management; Energy utilization,IC4,19,0,IC6,1
82,10.1109/ICAC.2019.00018,N. Schmitt; L. Iffländer; A. Bauer; S. Kounev,Online Power Consumption Estimation for Functions in Cloud Applications,2019 IEEE International Conference on Autonomic Computing (ICAC),,2474-0756,,12-Sep-19,,,,,IEEE,,"The growth of cloud services leads to more and more data centers that are increasingly larger and consume considerable amounts of power. To increase energy efficiency, informed decisions on workload placement and provisioning are essential. Micro-services and the upcoming serverless platforms with more granular deployment options exacerbate this problem. For this reason, knowing the power consumption of the deployed application becomes crucial, providing the necessary information for autonomous decision making. However, the actual power draw of a server running a specific application under load is not available without specialized measurement equipment or power consumption models. Yet, granularity is often only down to machine level and not application level. In this paper, we propose a monitoring and modeling approach to estimate power consumption on an application function level. The model uses performance counters that are allocated to specific functions to assess their impact on the total power consumption. Hence our model applies to a large variety of servers and for micro-service and serverless workloads. Our model uses an additional correction to minimize falsely allocated performance counters and increase accuracy. We validate the proposed approach on real hardware with a dedicated benchmarking application. The evaluation shows that our approach can be used to monitor application power consumption down to the function level with high accuracy for reliable workload provisioning and placement decisions.",978-1-7281-2411-7,,https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8831214,"Energy efficiency, serverless, micro-services, code offloading, DevOps",,5.0,,38.0,IEEE,,,,,,,,,,,,,,,,,Power demand;Data centers;Power measurement;Load modeling;Monitoring;Hardware;Software,IC4,20,0,"IC6,IC5",1
